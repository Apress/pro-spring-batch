<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
       	http://www.springframework.org/schema/batch 
	    http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">
	    
	<bean id="jobExplorer"
		class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
		p:dataSource-ref="dataSource" />

	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

	<bean
		class="org.springframework.batch.core.configuration.support.AutomaticJobRegistrar">
		<property name="applicationContextFactories">
			<bean
				class="org.springframework.batch.core.configuration.support.ClasspathXmlApplicationContextsFactoryBean">
				<property name="resources" value="classpath*:/jobs/deleteFilesJob.xml" />
			</bean>
		</property>
		<property name="jobLoader">
			<bean
				class="org.springframework.batch.core.configuration.support.DefaultJobLoader">
				<property name="jobRegistry" ref="jobRegistry" />
			</bean>
		</property>
	</bean>

	<bean id="jobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass"
			value="com.apress.springbatch.chapter6.SpringBatchQuartzJobLauncher" />
		<property name="group" value="file-maintenence" />
		<property name="jobDataAsMap">
			<util:map>
				<entry key="jobName" value="deleteFilesJob" />
				<entry key="jobLocator" value-ref="jobRegistry" />
				<entry key="jobLauncher" value-ref="jobLauncher" />
				<entry key="jobExplorer" value-ref="jobExplorer" />
				<entry key="jobParameters">
					<util:map>
						<entry key="path" value="${batch.temp.dir}" />
						<entry key="age" value="${batch.temp.age}" />
					</util:map>
				</entry>
			</util:map>
		</property>
	</bean>

	<bean id="schedule"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
				<property name="jobDetail" ref="jobDetail" />
				<property name="cronExpression" value="0/10 * * * * ?" />
			</bean>
		</property>
	</bean>
	<bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
		<property name="taskExecutor" ref="taskExecutor" />
	</bean>

	<batch:job-repository id="jobRepository"
		data-source="dataSource" transaction-manager="transactionManager" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${batch.jdbc.driver}" />
		<property name="url" value="${batch.jdbc.url}" />
		<property name="username" value="${batch.jdbc.user}" />
		<property name="password" value="${batch.jdbc.password}" />
	</bean>

	<!-- bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/ -->

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		lazy-init="true">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="placeholderProperties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:batch.properties" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="order" value="1" />
	</bean>

	<!-- Initialize the datasource - remove this bean definition for production 
		use! -->
	<bean id="dataSourceInitializer" class="test.jdbc.datasource.DataSourceInitializer">
		<property name="dataSource" ref="dataSource" />
		<property name="initScripts" value="${batch.schema.script}" />
	</bean>

</beans>
